--- unsimplified
+++ simplified
@@ -1,12 +1,12 @@
 type Animal implements Node {
   """Reads a single `Cat` that is related to this `Animal`."""
-  catById: Cat
+  cat: Cat
 
   """Reads a single `Dog` that is related to this `Animal`."""
-  dogById: Dog
+  dog: Dog
 
   """Reads a single `Gerbil` that is related to this `Animal`."""
-  gerbilByAnimalId: Gerbil
+  gerbil: Gerbil
   id: Int!
 
   """
@@ -72,7 +72,7 @@
 
 type Cat implements Node {
   """Reads a single `Animal` that is related to this `Cat`."""
-  animalById: Animal
+  animal: Animal
   id: Int!
 
   """
@@ -184,7 +184,7 @@
 """The output of our create `Cat` mutation."""
 type CreateCatPayload {
   """Reads a single `Animal` that is related to this `Cat`."""
-  animalById: Animal
+  animal: Animal
 
   """The `Cat` that was created by this mutation."""
   cat: Cat
@@ -222,7 +222,7 @@
 """The output of our create `Dog` mutation."""
 type CreateDogPayload {
   """Reads a single `Animal` that is related to this `Dog`."""
-  animalById: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
@@ -260,7 +260,7 @@
 """The output of our create `Gerbil` mutation."""
 type CreateGerbilPayload {
   """Reads a single `Animal` that is related to this `Gerbil`."""
-  animalByAnimalId: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
@@ -286,14 +286,18 @@
 """A location in a connection that can be used for resuming pagination."""
 scalar Cursor
 
-"""All input for the `deleteAnimalById` mutation."""
-input DeleteAnimalByIdInput {
+"""All input for the `deleteAnimalByNodeId` mutation."""
+input DeleteAnimalByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-  id: Int!
+
+  """
+  The globally unique `ID` which will identify a single `Animal` to be deleted.
+  """
+  nodeId: ID!
 }
 
 """All input for the `deleteAnimal` mutation."""
@@ -303,11 +307,7 @@
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `Animal` to be deleted.
-  """
-  nodeId: ID!
+  id: Int!
 }
 
 """The output of our delete `Animal` mutation."""
@@ -326,7 +326,7 @@
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-  deletedAnimalId: ID
+  deletedAnimalNodeId: ID
 
   """
   Our root query field type. Allows us to run any query from our mutation payload.
@@ -334,14 +334,18 @@
   query: Query
 }
 
-"""All input for the `deleteCatById` mutation."""
-input DeleteCatByIdInput {
+"""All input for the `deleteCatByNodeId` mutation."""
+input DeleteCatByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-  id: Int!
+
+  """
+  The globally unique `ID` which will identify a single `Cat` to be deleted.
+  """
+  nodeId: ID!
 }
 
 """All input for the `deleteCat` mutation."""
@@ -351,17 +355,13 @@
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `Cat` to be deleted.
-  """
-  nodeId: ID!
+  id: Int!
 }
 
 """The output of our delete `Cat` mutation."""
 type DeleteCatPayload {
   """Reads a single `Animal` that is related to this `Cat`."""
-  animalById: Animal
+  animal: Animal
 
   """The `Cat` that was deleted by this mutation."""
   cat: Cat
@@ -377,7 +377,7 @@
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-  deletedCatId: ID
+  deletedCatNodeId: ID
 
   """
   Our root query field type. Allows us to run any query from our mutation payload.
@@ -385,14 +385,18 @@
   query: Query
 }
 
-"""All input for the `deleteDogById` mutation."""
-input DeleteDogByIdInput {
+"""All input for the `deleteDogByNodeId` mutation."""
+input DeleteDogByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-  id: Int!
+
+  """
+  The globally unique `ID` which will identify a single `Dog` to be deleted.
+  """
+  nodeId: ID!
 }
 
 """All input for the `deleteDog` mutation."""
@@ -402,24 +406,20 @@
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `Dog` to be deleted.
-  """
-  nodeId: ID!
+  id: Int!
 }
 
 """The output of our delete `Dog` mutation."""
 type DeleteDogPayload {
   """Reads a single `Animal` that is related to this `Dog`."""
-  animalById: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-  deletedDogId: ID
+  deletedDogNodeId: ID
 
   """The `Dog` that was deleted by this mutation."""
   dog: Dog
@@ -436,42 +436,42 @@
   query: Query
 }
 
-"""All input for the `deleteGerbilByAnimalId` mutation."""
-input DeleteGerbilByAnimalIdInput {
-  animalId: Int!
-
+"""All input for the `deleteGerbilByNodeId` mutation."""
+input DeleteGerbilByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
+
+  """
+  The globally unique `ID` which will identify a single `Gerbil` to be deleted.
+  """
+  nodeId: ID!
 }
 
 """All input for the `deleteGerbil` mutation."""
 input DeleteGerbilInput {
+  animalId: Int!
+
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-
-  """
-  The globally unique `ID` which will identify a single `Gerbil` to be deleted.
-  """
-  nodeId: ID!
 }
 
 """The output of our delete `Gerbil` mutation."""
 type DeleteGerbilPayload {
   """Reads a single `Animal` that is related to this `Gerbil`."""
-  animalByAnimalId: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
   unchanged and unused. May be used by a client to track mutations.
   """
   clientMutationId: String
-  deletedGerbilId: ID
+  deletedGerbilNodeId: ID
 
   """The `Gerbil` that was deleted by this mutation."""
   gerbil: Gerbil
@@ -490,7 +490,7 @@
 
 type Dog implements Node {
   """Reads a single `Animal` that is related to this `Dog`."""
-  animalById: Animal
+  animal: Animal
   id: Int!
 
   """
@@ -554,7 +554,7 @@
 
 type Gerbil implements Node {
   """Reads a single `Animal` that is related to this `Gerbil`."""
-  animalByAnimalId: Animal
+  animal: Animal
   animalId: Int!
 
   """
@@ -654,7 +654,7 @@
     input: CreateGerbilInput!
   ): CreateGerbilPayload
 
-  """Deletes a single `Animal` using its globally unique id."""
+  """Deletes a single `Animal` using a unique key."""
   deleteAnimal(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -662,15 +662,15 @@
     input: DeleteAnimalInput!
   ): DeleteAnimalPayload
 
-  """Deletes a single `Animal` using a unique key."""
-  deleteAnimalById(
+  """Deletes a single `Animal` using its globally unique id."""
+  deleteAnimalByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteAnimalByIdInput!
+    input: DeleteAnimalByNodeIdInput!
   ): DeleteAnimalPayload
 
-  """Deletes a single `Cat` using its globally unique id."""
+  """Deletes a single `Cat` using a unique key."""
   deleteCat(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -678,15 +678,15 @@
     input: DeleteCatInput!
   ): DeleteCatPayload
 
-  """Deletes a single `Cat` using a unique key."""
-  deleteCatById(
+  """Deletes a single `Cat` using its globally unique id."""
+  deleteCatByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteCatByIdInput!
+    input: DeleteCatByNodeIdInput!
   ): DeleteCatPayload
 
-  """Deletes a single `Dog` using its globally unique id."""
+  """Deletes a single `Dog` using a unique key."""
   deleteDog(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -694,15 +694,15 @@
     input: DeleteDogInput!
   ): DeleteDogPayload
 
-  """Deletes a single `Dog` using a unique key."""
-  deleteDogById(
+  """Deletes a single `Dog` using its globally unique id."""
+  deleteDogByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteDogByIdInput!
+    input: DeleteDogByNodeIdInput!
   ): DeleteDogPayload
 
-  """Deletes a single `Gerbil` using its globally unique id."""
+  """Deletes a single `Gerbil` using a unique key."""
   deleteGerbil(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -710,15 +710,15 @@
     input: DeleteGerbilInput!
   ): DeleteGerbilPayload
 
-  """Deletes a single `Gerbil` using a unique key."""
-  deleteGerbilByAnimalId(
+  """Deletes a single `Gerbil` using its globally unique id."""
+  deleteGerbilByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: DeleteGerbilByAnimalIdInput!
+    input: DeleteGerbilByNodeIdInput!
   ): DeleteGerbilPayload
 
-  """Updates a single `Animal` using its globally unique id and a patch."""
+  """Updates a single `Animal` using a unique key and a patch."""
   updateAnimal(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -726,15 +726,15 @@
     input: UpdateAnimalInput!
   ): UpdateAnimalPayload
 
-  """Updates a single `Animal` using a unique key and a patch."""
-  updateAnimalById(
+  """Updates a single `Animal` using its globally unique id and a patch."""
+  updateAnimalByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateAnimalByIdInput!
+    input: UpdateAnimalByNodeIdInput!
   ): UpdateAnimalPayload
 
-  """Updates a single `Cat` using its globally unique id and a patch."""
+  """Updates a single `Cat` using a unique key and a patch."""
   updateCat(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -742,15 +742,15 @@
     input: UpdateCatInput!
   ): UpdateCatPayload
 
-  """Updates a single `Cat` using a unique key and a patch."""
-  updateCatById(
+  """Updates a single `Cat` using its globally unique id and a patch."""
+  updateCatByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateCatByIdInput!
+    input: UpdateCatByNodeIdInput!
   ): UpdateCatPayload
 
-  """Updates a single `Dog` using its globally unique id and a patch."""
+  """Updates a single `Dog` using a unique key and a patch."""
   updateDog(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -758,15 +758,15 @@
     input: UpdateDogInput!
   ): UpdateDogPayload
 
-  """Updates a single `Dog` using a unique key and a patch."""
-  updateDogById(
+  """Updates a single `Dog` using its globally unique id and a patch."""
+  updateDogByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateDogByIdInput!
+    input: UpdateDogByNodeIdInput!
   ): UpdateDogPayload
 
-  """Updates a single `Gerbil` using its globally unique id and a patch."""
+  """Updates a single `Gerbil` using a unique key and a patch."""
   updateGerbil(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
@@ -774,12 +774,12 @@
     input: UpdateGerbilInput!
   ): UpdateGerbilPayload
 
-  """Updates a single `Gerbil` using a unique key and a patch."""
-  updateGerbilByAnimalId(
+  """Updates a single `Gerbil` using its globally unique id and a patch."""
+  updateGerbilByNodeId(
     """
     The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
     """
-    input: UpdateGerbilByAnimalIdInput!
+    input: UpdateGerbilByNodeIdInput!
   ): UpdateGerbilPayload
 }
 
@@ -808,8 +808,17 @@
 
 """The root query type which gives access points into the data universe."""
 type Query implements Node {
+  """Get a single `Animal`."""
+  animal(id: Int!): Animal
+
+  """Reads a single `Animal` using its globally unique `ID`."""
+  animalByNodeId(
+    """The globally unique `ID` to be used in selecting a single `Animal`."""
+    nodeId: ID!
+  ): Animal
+
   """Reads and enables pagination through a set of `Animal`."""
-  allAnimals(
+  animals(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -836,7 +845,7 @@
     """The method to use when ordering `Animal`."""
     orderBy: [AnimalsOrderBy!] = [PRIMARY_KEY_ASC]
   ): AnimalsConnection
-  allAnimalsList(
+  animalsList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -852,8 +861,17 @@
     orderBy: [AnimalsOrderBy!]
   ): [Animal!]
 
+  """Get a single `Cat`."""
+  cat(id: Int!): Cat
+
+  """Reads a single `Cat` using its globally unique `ID`."""
+  catByNodeId(
+    """The globally unique `ID` to be used in selecting a single `Cat`."""
+    nodeId: ID!
+  ): Cat
+
   """Reads and enables pagination through a set of `Cat`."""
-  allCats(
+  cats(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -880,7 +898,7 @@
     """The method to use when ordering `Cat`."""
     orderBy: [CatsOrderBy!] = [PRIMARY_KEY_ASC]
   ): CatsConnection
-  allCatsList(
+  catsList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -896,8 +914,17 @@
     orderBy: [CatsOrderBy!]
   ): [Cat!]
 
+  """Get a single `Dog`."""
+  dog(id: Int!): Dog
+
+  """Reads a single `Dog` using its globally unique `ID`."""
+  dogByNodeId(
+    """The globally unique `ID` to be used in selecting a single `Dog`."""
+    nodeId: ID!
+  ): Dog
+
   """Reads and enables pagination through a set of `Dog`."""
-  allDogs(
+  dogs(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -924,7 +951,7 @@
     """The method to use when ordering `Dog`."""
     orderBy: [DogsOrderBy!] = [PRIMARY_KEY_ASC]
   ): DogsConnection
-  allDogsList(
+  dogsList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -940,8 +967,17 @@
     orderBy: [DogsOrderBy!]
   ): [Dog!]
 
+  """Get a single `Gerbil`."""
+  gerbil(animalId: Int!): Gerbil
+
+  """Reads a single `Gerbil` using its globally unique `ID`."""
+  gerbilByNodeId(
+    """The globally unique `ID` to be used in selecting a single `Gerbil`."""
+    nodeId: ID!
+  ): Gerbil
+
   """Reads and enables pagination through a set of `Gerbil`."""
-  allGerbils(
+  gerbils(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -968,7 +1004,7 @@
     """The method to use when ordering `Gerbil`."""
     orderBy: [GerbilsOrderBy!] = [PRIMARY_KEY_ASC]
   ): GerbilsConnection
-  allGerbilsList(
+  gerbilsList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -984,42 +1020,6 @@
     orderBy: [GerbilsOrderBy!]
   ): [Gerbil!]
 
-  """Reads a single `Animal` using its globally unique `ID`."""
-  animal(
-    """The globally unique `ID` to be used in selecting a single `Animal`."""
-    nodeId: ID!
-  ): Animal
-
-  """Get a single `Animal`."""
-  animalById(id: Int!): Animal
-
-  """Reads a single `Cat` using its globally unique `ID`."""
-  cat(
-    """The globally unique `ID` to be used in selecting a single `Cat`."""
-    nodeId: ID!
-  ): Cat
-
-  """Get a single `Cat`."""
-  catById(id: Int!): Cat
-
-  """Reads a single `Dog` using its globally unique `ID`."""
-  dog(
-    """The globally unique `ID` to be used in selecting a single `Dog`."""
-    nodeId: ID!
-  ): Dog
-
-  """Get a single `Dog`."""
-  dogById(id: Int!): Dog
-
-  """Reads a single `Gerbil` using its globally unique `ID`."""
-  gerbil(
-    """The globally unique `ID` to be used in selecting a single `Gerbil`."""
-    nodeId: ID!
-  ): Gerbil
-
-  """Get a single `Gerbil`."""
-  gerbilByAnimalId(animalId: Int!): Gerbil
-
   """Fetches an object given its globally unique `ID`."""
   node(
     """The globally unique `ID`."""
@@ -1038,38 +1038,38 @@
   query: Query!
 }
 
-"""All input for the `updateAnimalById` mutation."""
-input UpdateAnimalByIdInput {
-  """
-  An object where the defined keys will be set on the `Animal` being updated.
-  """
-  animalPatch: AnimalPatch!
-
+"""All input for the `updateAnimalByNodeId` mutation."""
+input UpdateAnimalByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-  id: Int!
-}
 
-"""All input for the `updateAnimal` mutation."""
-input UpdateAnimalInput {
+  """
+  The globally unique `ID` which will identify a single `Animal` to be updated.
+  """
+  nodeId: ID!
+
   """
   An object where the defined keys will be set on the `Animal` being updated.
   """
-  animalPatch: AnimalPatch!
+  patch: AnimalPatch!
+}
 
+"""All input for the `updateAnimal` mutation."""
+input UpdateAnimalInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
+  id: Int!
 
   """
-  The globally unique `ID` which will identify a single `Animal` to be updated.
+  An object where the defined keys will be set on the `Animal` being updated.
   """
-  nodeId: ID!
+  patch: AnimalPatch!
 }
 
 """The output of our update `Animal` mutation."""
@@ -1095,44 +1095,44 @@
   query: Query
 }
 
-"""All input for the `updateCatById` mutation."""
-input UpdateCatByIdInput {
-  """
-  An object where the defined keys will be set on the `Cat` being updated.
-  """
-  catPatch: CatPatch!
-
+"""All input for the `updateCatByNodeId` mutation."""
+input UpdateCatByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
-  id: Int!
-}
 
-"""All input for the `updateCat` mutation."""
-input UpdateCatInput {
+  """
+  The globally unique `ID` which will identify a single `Cat` to be updated.
+  """
+  nodeId: ID!
+
   """
   An object where the defined keys will be set on the `Cat` being updated.
   """
-  catPatch: CatPatch!
+  patch: CatPatch!
+}
 
+"""All input for the `updateCat` mutation."""
+input UpdateCatInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
+  id: Int!
 
   """
-  The globally unique `ID` which will identify a single `Cat` to be updated.
+  An object where the defined keys will be set on the `Cat` being updated.
   """
-  nodeId: ID!
+  patch: CatPatch!
 }
 
 """The output of our update `Cat` mutation."""
 type UpdateCatPayload {
   """Reads a single `Animal` that is related to this `Cat`."""
-  animalById: Animal
+  animal: Animal
 
   """The `Cat` that was updated by this mutation."""
   cat: Cat
@@ -1155,8 +1155,8 @@
   query: Query
 }
 
-"""All input for the `updateDogById` mutation."""
-input UpdateDogByIdInput {
+"""All input for the `updateDogByNodeId` mutation."""
+input UpdateDogByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -1164,10 +1164,14 @@
   clientMutationId: String
 
   """
+  The globally unique `ID` which will identify a single `Dog` to be updated.
+  """
+  nodeId: ID!
+
+  """
   An object where the defined keys will be set on the `Dog` being updated.
   """
-  dogPatch: DogPatch!
-  id: Int!
+  patch: DogPatch!
 }
 
 """All input for the `updateDog` mutation."""
@@ -1177,22 +1181,18 @@
   payload verbatim. May be used to track mutations by the client.
   """
   clientMutationId: String
+  id: Int!
 
   """
   An object where the defined keys will be set on the `Dog` being updated.
   """
-  dogPatch: DogPatch!
-
-  """
-  The globally unique `ID` which will identify a single `Dog` to be updated.
-  """
-  nodeId: ID!
+  patch: DogPatch!
 }
 
 """The output of our update `Dog` mutation."""
 type UpdateDogPayload {
   """Reads a single `Animal` that is related to this `Dog`."""
-  animalById: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
@@ -1215,10 +1215,8 @@
   query: Query
 }
 
-"""All input for the `updateGerbilByAnimalId` mutation."""
-input UpdateGerbilByAnimalIdInput {
-  animalId: Int!
-
+"""All input for the `updateGerbilByNodeId` mutation."""
+input UpdateGerbilByNodeIdInput {
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -1226,13 +1224,20 @@
   clientMutationId: String
 
   """
+  The globally unique `ID` which will identify a single `Gerbil` to be updated.
+  """
+  nodeId: ID!
+
+  """
   An object where the defined keys will be set on the `Gerbil` being updated.
   """
-  gerbilPatch: GerbilPatch!
+  patch: GerbilPatch!
 }
 
 """All input for the `updateGerbil` mutation."""
 input UpdateGerbilInput {
+  animalId: Int!
+
   """
   An arbitrary string value with no semantic meaning. Will be included in the
   payload verbatim. May be used to track mutations by the client.
@@ -1242,18 +1247,13 @@
   """
   An object where the defined keys will be set on the `Gerbil` being updated.
   """
-  gerbilPatch: GerbilPatch!
-
-  """
-  The globally unique `ID` which will identify a single `Gerbil` to be updated.
-  """
-  nodeId: ID!
+  patch: GerbilPatch!
 }
 
 """The output of our update `Gerbil` mutation."""
 type UpdateGerbilPayload {
   """Reads a single `Animal` that is related to this `Gerbil`."""
-  animalByAnimalId: Animal
+  animal: Animal
 
   """
   The exact same `clientMutationId` that was provided in the mutation input,
