--- unsimplified
+++ simplified
@@ -1,10 +1,10 @@
 type Beverage implements Node {
   """Reads a single `Company` that is related to this `Beverage`."""
-  companyByCompanyId: Company
+  company: Company
+  companyId: Int!
 
   """Reads a single `Company` that is related to this `Beverage`."""
-  companyByDistributorId: Company
-  companyId: Int!
+  distributor: Company
   distributorId: Int
   id: Int!
   name: String!
@@ -113,7 +113,7 @@
 
 type Company implements Node {
   """Reads and enables pagination through a set of `Beverage`."""
-  beveragesByCompanyId(
+  beverages(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -142,7 +142,7 @@
   ): BeveragesConnection!
 
   """Reads and enables pagination through a set of `Beverage`."""
-  beveragesByCompanyIdList(
+  beveragesList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -190,6 +190,15 @@
 
   """Reads and enables pagination through a set of `Beverage`."""
   computedListOmit(
+    """Only read the first `n` values of the set."""
+    first: Int
+
+    """Skip the first `n` values."""
+    offset: Int
+  ): [Beverage]
+
+  """Reads and enables pagination through a set of `Beverage`."""
+  computedListOmitConnection(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -210,15 +219,6 @@
   ): BeveragesConnection!
 
   """Reads and enables pagination through a set of `Beverage`."""
-  computedListOmitList(
-    """Only read the first `n` values of the set."""
-    first: Int
-
-    """Skip the first `n` values."""
-    offset: Int
-  ): [Beverage]
-
-  """Reads and enables pagination through a set of `Beverage`."""
   distributedBeverages(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
@@ -311,8 +311,33 @@
 
 """The root query type which gives access points into the data universe."""
 type Query implements Node {
+  beverage(id: Int!): Beverage
+
+  """Reads a single `Beverage` using its globally unique `ID`."""
+  beverageByNodeId(
+    """The globally unique `ID` to be used in selecting a single `Beverage`."""
+    nodeId: ID!
+  ): Beverage
+
+  """Reads a set of `Beverage`."""
+  beverages(
+    """
+    A condition to be used in determining which values should be returned by the collection.
+    """
+    condition: BeverageCondition
+
+    """Only read the first `n` values of the set."""
+    first: Int
+
+    """Skip the first `n` values."""
+    offset: Int
+
+    """The method to use when ordering `Beverage`."""
+    orderBy: [BeveragesOrderBy!]
+  ): [Beverage!]
+
   """Reads and enables pagination through a set of `Beverage`."""
-  allBeverages(
+  beveragesConnection(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -340,25 +365,8 @@
     orderBy: [BeveragesOrderBy!] = [PRIMARY_KEY_ASC]
   ): BeveragesConnection
 
-  """Reads a set of `Beverage`."""
-  allBeveragesList(
-    """
-    A condition to be used in determining which values should be returned by the collection.
-    """
-    condition: BeverageCondition
-
-    """Only read the first `n` values of the set."""
-    first: Int
-
-    """Skip the first `n` values."""
-    offset: Int
-
-    """The method to use when ordering `Beverage`."""
-    orderBy: [BeveragesOrderBy!]
-  ): [Beverage!]
-
   """Reads and enables pagination through a set of `Company`."""
-  allCompanies(
+  companies(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -387,7 +395,7 @@
   ): CompaniesConnection
 
   """Reads a set of `Company`."""
-  allCompaniesList(
+  companiesList(
     """
     A condition to be used in determining which values should be returned by the collection.
     """
@@ -402,20 +410,13 @@
     """The method to use when ordering `Company`."""
     orderBy: [CompaniesOrderBy!]
   ): [Company!]
-
-  """Reads a single `Beverage` using its globally unique `ID`."""
-  beverage(
-    """The globally unique `ID` to be used in selecting a single `Beverage`."""
-    nodeId: ID!
-  ): Beverage
-  beverageById(id: Int!): Beverage
+  company(id: Int!): Company
 
   """Reads a single `Company` using its globally unique `ID`."""
-  company(
+  companyByNodeId(
     """The globally unique `ID` to be used in selecting a single `Company`."""
     nodeId: ID!
   ): Company
-  companyById(id: Int!): Company
 
   """Reads and enables pagination through a set of `Beverage`."""
   listInclude(
@@ -449,6 +450,15 @@
 
   """Reads and enables pagination through a set of `Beverage`."""
   listOmit(
+    """Only read the first `n` values of the set."""
+    first: Int
+
+    """Skip the first `n` values."""
+    offset: Int
+  ): [Beverage]
+
+  """Reads and enables pagination through a set of `Beverage`."""
+  listOmitConnection(
     """Read all values in the set after (below) this cursor."""
     after: Cursor
 
@@ -468,15 +478,6 @@
     offset: Int
   ): BeveragesConnection
 
-  """Reads and enables pagination through a set of `Beverage`."""
-  listOmitList(
-    """Only read the first `n` values of the set."""
-    first: Int
-
-    """Skip the first `n` values."""
-    offset: Int
-  ): [Beverage]
-
   """Fetches an object given its globally unique `ID`."""
   node(
     """The globally unique `ID`."""
